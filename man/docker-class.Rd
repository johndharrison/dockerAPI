% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/docker.R
\docType{class}
\name{docker-class}
\alias{docker}
\alias{docker-class}
\title{docker Class uses the}
\description{
docker is a generator object.
}
\section{Fields}{

\describe{
\item{\code{dockerUrl}}{a string of the docker host url or a httr object of class url}

\item{\code{dockerConf}}{Persistent configuration settings for curl}
}}
\section{Methods}{

\describe{
\item{\code{buildREST(dUrl = dockerUrl, urlComp, httpMethod, renderDF = data.frame(),
  pass = c(200L), errors = c(), ...)}}{Utility function to build RESTful requests.}

\item{\code{checkAuth(...)}}{Get the default username and email:
  \describe{
  \item{\code{...}:}{Additional arguments to pass to httr functions \code{\link{GET}}, \code{\link{POST}} etc.}
}}

\item{\code{createContainer(contOpt, ...)}}{Create a container
\describe{
\item{\code{contOpt}:}{A object of class "containerOpt". See \code{\link{containerOpt}}}
\item{\code{...}:}{Additional arguments to pass to httr functions \code{\link{GET}}, \code{\link{POST}} etc.}
}}

\item{\code{createImage(fromImage, fromSrc = NULL, repo = NULL, tag = NULL,
  registry = NULL, XRegistryAuth = NULL, ...)}}{Create an image, either by pulling it from the registry or by importing it.
     \describe{
      \item{\code{fromImage}:}{Name of the image to pull.}
      \item{\code{fromSrc}:}{source to import, means stdin}
      \item{\code{repo}:}{Repository}
      \item{\code{tag}:}{Tag}
      \item{\code{registry}:}{Registry}
      \item{\code{XRegistryAuth}:}{Base64-encoded AuthConfig object.}
      \item{\code{...}:}{Additional arguments to pass to httr functions \code{\link{GET}}, \code{\link{POST}} etc.}
     }}

\item{\code{getContainers(all = TRUE, limit = NULL, since = NULL, before = NULL,
  size = NULL, ...)}}{List containers:
\describe{
\item{\code{all}:}{1/True/true or 0/False/false, Show all containers. Only running containers are shown by default (i.e., this defaults to false)}
\item{\code{limit}:}{Show limit last created containers, include non-running ones.}
\item{\code{since}:}{Show only containers created since Id, include non-running ones.}
\item{\code{before}:}{Show only containers created before Id, include non-running ones.}
\item{\code{size}:}{1/True/true or 0/False/false, Show the containers sizes}
\item{\code{...}:}{Additional arguments to pass to httr functions \code{\link{GET}}, \code{\link{POST}} etc.}
}}

\item{\code{getImages(all = FALSE, filters = NULL, ...)}}{List images:
\describe{
\item{\code{all}:}{1/True/true or 0/False/false, Show all images. Only running images are shown by default (i.e., this defaults to false)}
\item{\code{filters}:}{a json encoded value of the filters (a map[string][]string) to process on the images list.}
\item{\code{...}:}{Additional arguments to pass to httr functions \code{\link{GET}}, \code{\link{POST}} etc.}
 }}

\item{\code{info(...)}}{Display system-wide information:
\describe{
\item{\code{...}:}{Additional arguments to pass to httr functions \code{\link{GET}}, \code{\link{POST}} etc.}
}}

\item{\code{ping(...)}}{Ping the docker server:
\describe{
\item{\code{...}:}{Additional arguments to pass to httr functions \code{\link{GET}}, \code{\link{POST}} etc.}
}}

\item{\code{searchImages(term, ...)}}{List images:
\describe{
\item{\code{term}:}{Term to search.}
\item{\code{...}:}{Additional arguments to pass to httr functions \code{\link{GET}}, \code{\link{POST}} etc.}

}}

\item{\code{version(...)}}{Show the docker version information:
\describe{
\item{\code{...}:}{Additional arguments to pass to httr functions \code{\link{GET}}, \code{\link{POST}} etc.}
}}
}}
\examples{
\dontrun{
docker <- docker("http://192.168.59.103:2375") # windows example
docker$getContainers()

# TLS example:
dckr <- docker("https://192.168.59.103:2376")
# Note the location of your certs.
myConfig = httr::config(sslcert = "../../certs/cert.pem"
                   , sslkey = "../../certs/key.pem"
                   , sslversion=1L, ssl.verifypeer = FALSE)
dckr$getContainers(config = myConfig)
dckr$searchImages("rstudio", config = myConfig)
}
}

